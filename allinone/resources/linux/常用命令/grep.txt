Linux系统中grep命令是一种强大的文本搜索工具，全称是Global Regular Expression Print，它能在文件中搜索符合要求的文本，并把匹配的行打印出来。
它的使用权限是所有用户，大多数情况下，grep命令都是配合管道符使用，以期获得符合要求结果。

grep [options] [--color=auto] regex [files]
---------------------------------------------------------------------------------------------------------------------------------------------------
其中options主要为下表：
选项 	含义 	功能描述
-i 	ignore case 	忽略大小写
-v 	invert match 	不匹配匹配的
-l 	file-with-match 	输出匹配的文件名
-L 	file-without-match 	输出不匹配的文件名
-c 	count 	输出匹配的数目（行数）
-n 	number 	输出匹配行的同时在前面加上文件名及在文件名中的行数
-h 	no-filename 	抑制文件名的输出
-w 匹配单词
-x 匹配整行
-r 递归搜索

---------------------------------------------------------------------------------------------------------------------------------------------------
regex 正则表达式
基本的构造块是匹配单个字符的正则表达式。
大部分字符，包括所有字母和数字，是匹配它们自身的正则表达式。
任何具有特殊含义的元字符可以通过前置一个反斜杠来引用。
大多数元字符处于序列中时会失去它们正则表达式的特殊意义。

在基本正则表达式中，元字符 ?, +, {, |, (, 和 ) 丧失了它们的特殊意义；作为替代，使用加反斜杠的 (backslash) 版本 \?, \+, \{, \|, \(, 和 \) 。  ？？？
1、特殊字符
符号 	含义 	举例
^ 	开始标记 	"^abc"满足的例子abc、abcd
^ 	非（在[]内） 	"[^abc]"满足的例子：ddd、mpd
$ 	结束标记 	”abc$”满足的例子abc、mmabc
. 	任意字符 	"a.c"满足的例子abc、fapcc
\< 	匹配单词开始 	"\<abc"满足的例子abc、abcd
\> 	匹配单词结束 	"abc\>"满足的例子abc、pmrabc
| 	或 	"AAA|BBB"满足的例子AAA、BBBpp

2、范围
符号 	含义 	举例
? 	匹配前一个字符0或1次 	"abc?"满足的例子ab、mabcd
* 	匹配前一个字符≥0次 	"abc*"满足的例子abbb、abcdk
+ 	匹配前一个字符≥1次 	"abc+"满足的例子abcd、abcccdd
{} 	{m}、{m,n}、{m,}、{,n}分别为匹配前一个字符m次、m到n次、≥m次、≤n次 	"abc\{3,5\}"满足的例子abcccc、abcccccc
[] 	[]内如果不是范围，选其一；是范围的话，范围内选其一 	"m[abc]p"满足的例子acpd；m[1-9]p满足的例子m8pp
() 	将候选的所有元素放在()内，用|隔开 	"a(1|2|3)bc"满足的例子a1bc、mba3bcd

注意：
{}在正则表达式中需要转义。
\<\> 精确匹配 如\<the\> 只匹配the，而不匹配包含the的then，them。

grep pattern1 | pattern2 files ：显示匹配 pattern1 或 pattern2 的行，
grep pattern1 files | grep pattern2 ：显示既匹配 pattern1 又匹配 pattern2 的行。

eg. grep -v ^# /etc/login.defs | grep -v ^$