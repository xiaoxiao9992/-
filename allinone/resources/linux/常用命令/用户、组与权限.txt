Linux是多用户多任务的操作系统，用户、组与权限是重要的基础知识。

Linux用户可以分为三类：
root用户：超级用户，系统唯一，最高权限。
系统用户/虚拟用户：不能登录系统，系统自身拥有。
普通真实用户：这类用户能登录系统，权限受限。

-------------------------------------------------------------------------------------------------------------------------
相关配置文件/目录
Linux中所有的信息都是通过配置文件的方式保存。

使用useradd时，选项后面直接跟所添加的用户名时，该命令将完成以下几件事：
读取添加用户的配置文件/etc/login.defs和/etc/default/useradd文件，按配置文件中的规则添加用户；
向/etc/passwd、/etc/shadow和/etc/group文件添加用户和用户组记录；
建立/etc/login.defs中约定的家目录并复制/etc/skel中的文件（包括隐藏文件）到新用户的家目录。

1、/etc/default/useradd
useradd命令加参数-D参看系统的默认值：
GROUP=100 
HOME=/home 
INACTIVE=-1 
EXPIRE= 
SHELL=/bin/bash 
SKEL=/etc/skel 
CREATE_MAIL_SPOOL=yes

解释：
1）新用户添加到普通组
2）新用户的家目录将建立在/home中
3）是否启动用户过期功能，-1表示不启用
4）指定用户过期日期
5）指定用户默认使用的shell
6）指定用户家目录的模板目录
7）系统为该用户账户在mail目录下创建一个用于接收邮件的文件

2、/etc/login.defs
grep -v ^# /etc/login.defs | grep -v ^$

MAIL_DIR        /var/spool/mail     #新建用户的默认邮箱目录
PASS_MAX_DAYS   99999               #新建用户的密码最长使用时间
PASS_MIN_DAYS   0
PASS_MIN_LEN    5
PASS_WARN_AGE   7                   #新建用户的密码过期警告时间
UID_MIN                   500
UID_MAX                 60000
GID_MIN                   500
GID_MAX                 60000
CREATE_HOME     yes                 #自动建立家目录
UMASK           077                 #权限掩码
#用户密码加密与加密类型
USERGROUPS_ENAB yes
ENCRYPT_METHOD SHA512

3、/etc/passwd
保存了所有的用户信息，一行代表一个用户。

用户名:密码:UID:GID:用户备注:家目录:shell

密码列用x表示，表示密码已经被移动到/etc/shadow文件中。
shell列，有些禁止用户登录的方式就是为指定"/sbin/nologin"的登录shell

4、/etc/shadow
5、/etc/group

组名称:组密码:GID:组成员

组密码列x表示该组的密码记录在/etc/gshadow文件中。


-------------------------------------------------------------------------------------------------------------------------
常用命令
useradd 创建用户
useradd [-u <UID>] [-g <用户组>] [-M/m(不建立/建立家目录)] [-c <用户说明备注>] [-d <家目录>] [-s <shell>] 用户名

1：不指定-M/m则根据/etc/login.defs中规则决定。
2：在指定shell时
/bin/false是最严格的禁止login选项，一切服务都不能用。 
/sbin/nologin只是不允许login系统 

userdel [-r] 用户名  删除用户，-r表示删除用户家目录。
passwd [用户名]  指定或更改用户密码

usermod 更改用户信息
groupadd [-g <GID>] 组名称  新建用户组
groupmod [-g <GID>] 组名称 [-n <组名称>]  修改组信息
groupdel 删除组

---------------------------------------------------------------------------------------------------------------
who am i 与whoami
whoami显示的是当前“操作用户”的用户名，而who am i显示的是“登录用户”的用户名。
用Linux的术语来解释就是：（实际用户=uid，即user id。有效用户=euid，即effective user id）
who am i 显示的是实际用户的用户名，即用户登陆的时候的用户ID。此命令相当于who -m。
whoami   显示的是有效用户ID（操作用户）.
---------------------------------------------------------------------------------------------------------------
关于su与su -
单纯使用su切换到root，读取变量的方式是non-login shell，这种方式下很多的变量都不会改变，尤其是PATH，
所以root用的很多的命令都只能用绝对路径来执行，这种方式只是切换到root的身份。
而用su -这种方式的话，是login shell方式，它是先以root身份登录然后再执行别的操作。

su命令和su -命令：
前者只是切换了root身份，但Shell环境仍然是普通用户的Shell；
而后者连用户和Shell环境一起切换成root身份了。
只有切换了Shell环境才不会出现PATH环境变量错误。
su切换成root用户以后，pwd一下，发现工作目录仍然是普通用户的工作目录；
而用su -命令切换以后，工作目录变成root的工作目录了。
用echo $PATH命令看一下su和su -以后的环境变量有何不同。以此类推，要从当前用户切换到其它用户也一样，应该使用su -命令。

关于su的本质：http://www.jb51.net/LINUXjishu/192907.html

当我们以root执行su时，su命令会以当前shell进程为父进程来创建一个新的shell进程，这个shell进程是提供给我们所要su到的那个用户使用的，
而root的shell进程仍然存在，反过来也是一样的，因为之前那个用户的shell进程还没关闭，
你可以使用exit退出一下，可以看到，并不是退出登录了，而是回到之前的那个用户去了。
因为它们是父子进程的关系，子进程的结束当然 不会影响到父进程的执行了。但是我们如果强行杀死父进程，那就直接退出了。 

-------------------------------------------------------------------------------------------------------------------------
Linux中的权限分为可读（r）、可写（w）、可执行（x）三种。也可以通过整数表示：可读=4，可写=2，可执行=1。
常用命令
chgrp [-rfRv] [用户组] [--reference <参考文件或目录>] 文件|目录                     更改文件或目录的拥有组
chown [-rfRv] [--reference <参考文件或目录>] 所有者:[拥有组] 文件|目录              更改文件或目录的所有者和拥有组
chmod [-rfRv] [--reference <参考文件或目录>] [u|g|o|a][+|-|=] 权限字符 文件|目录    更改文件或目录权限

权限掩码umask
在Linux内核级别新建文件的默认权限是666，新建目录的默认权限是777。
当用户新建目录或文件时真正的权限会使用Linux内核级别的默认权限减去权限掩码值（umask）得到实际的权限值。
eg.
[root@ebs-46574 ~]# id
uid=0(root) gid=0(root) groups=0(root)
[root@ebs-46574 ~]# umask
0022
umask最开头的0忽略～～
可以使用"umask 权限掩码"修改掩码值

关于高级权限管理 略......


